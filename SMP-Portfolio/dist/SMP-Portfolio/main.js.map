{"version":3,"sources":["./src/app/models/user.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/helper/auth.guard.ts","./src/app/login/index.ts","./src/app/helper/error.interceptor.ts","./src/app/helper/jwt.interceptor.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/index.ts","./src/app/app.module.ts","./src/app/services/authentication.service.ts","./src/app/helper/fake-backend.ts","./src/app/helper/index.ts","./src/app/services/index.ts","./src/app/services/user.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/home/index.ts","./src/app/contact-dialog/contact-dialog.component.ts","./src/app/contact-dialog/contact-dialog.component.html","./src/app/models/role.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Role } from \"./role\";\n\nexport class User {\n    id: number;\n    username: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n    role: Role;\n    token?: string;\n}","import { Component, HostListener  } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '../models';\nimport { UserService, AuthenticationService } from '../services';\n\n@Component({ templateUrl: 'home.component.html' })\nexport class HomeComponent {\n    loading = false;\n    user: User;\n    userFromApi: User;\n\n    constructor(\n        private userService: UserService,\n        private authenticationService: AuthenticationService\n    ) {\n        this.user = this.authenticationService.userValue;\n    }\n\n    ngOnInit() {\n        this.loading = true;\n        this.userService.getById(this.user.id).pipe(first()).subscribe(user => {\n            this.loading = false;\n            this.userFromApi = user;\n        });\n    }\n\n\n\n    // @HostListener('window:beforeunload', ['$event']) doSomething(){\n    //    alert(\"click exit button\");\n    //    $event.returnValue = \"Are you sure?\";\n    // }\n\n    // @HostListener(\"window:beforeunload\", [\"$event\"]) beforeUnload($event: Event) {\n    //     console.log($event)\n    //   $event.returnValue =false;\n    // }\n\n    exit() { \n        //window.close();\n        this.authenticationService.logout();\n    }\n\n    selectChangeHandler(event) {\n        if(event.target.value === 'logout'){\n            this.authenticationService.logout();\n        }\n    }\n\n    \n}","\n<div class=\"inner-header\">\n      <div class=\"nav-item-smp\" ><img src=\"assets/logo_smp.jpg\" alt=\"\" width=\"100%\"> </div>\n      <span></span>\n      <h2 >SMART METER OPERATIONS CENTER</h2>\n      <div class=\"nav-item-sec\" ><img src=\"assets/logo_sec.png\" alt=\"\" width=\"100%\"></div>\n</div>\n<div class=\"main-content\">\n    <div class=\"welcome-header\" style=\"border: 1px solid #80808024; background-color: #F8F8F8;\">\n        <h4  *ngIf=\"userFromApi\">Welcome <span>{{userFromApi.firstName}}</span></h4>\n        <div class=\"exit\"  (click)=\"exit()\" >Logout</div> \n        <div class=\"manage-profile\" > Manage Profile</div> \n    </div>\n      \n    <div class=\"option-select\"> Please select option below to proceed</div>\n    <!-- <div  class=\"package-main\">\n       <div class=\"package-div\">\n           <h2>Package A</h2>\n           <ul>\n               <li>SGCC-HES</li>\n               <li>MAF-HES</li>\n               <li>SGCC-WFMS</li>\n               <li>SGCC-WFMS</li>\n           </ul>\n       </div>\n       <div class=\"package-div\" style=\"margin:0% 5%\">\n            <h2>Package B</h2>\n            <ul>\n                <li>MDMS</li>\n                <li>KMS</li>\n            </ul>\n      </div>\n      <div class=\"package-div\">\n           <h2>Package C</h2>\n           <ul>\n               <li>Tableau Dashboard System</li>\n               <li>Trouble Ticketing System </li>\n               <li>Unified Fault Management System</li>\n               <li>Asset management System</li>\n               <li>Application Management System</li>\n               <li>Business Process Automation System</li>\n               <li>Clous Monitoring System</li>\n           </ul>\n       </div>\n    </div>  -->\n\n    <div class =\"box-view\">\n        <mat-tab-group>\n            <mat-tab label=\"Package A\" class=\"package-tab-a\">\n                <div class=\"block\"> \n                    SGCC-HES\n                </div>\n                <div class=\"block\" style=\"margin: 0% 2%;\"> \n                    MAF-HES\n                </div>\n                <div class=\"block\"> \n                    SGCC-WFMS\n                </div>\n                <div class=\"block\" style=\"margin-left:2%;\"> \n                    MAF-WFMS\n                </div>\n           </mat-tab>\n            <mat-tab label=\"Package B\"> \n                <div class=\"block\"> \n                    MDMS\n                </div>\n                <div class=\"block\" style=\"margin: 0% 2%;\"> \n                    KMS\n                </div>\n                \n             </mat-tab>\n            <mat-tab label=\"Package C\"> \n                <div class=\"block\"> \n                    Tableau Dashboard System\n                </div>\n                <div class=\"block\" style=\"margin: 0% 2%;\"> \n                    Trouble Ticketing System\n                </div>\n                <div class=\"block\" > \n                    Unified Fault Management System\n                </div>\n                <div class=\"block\" style=\"margin-left: 2%;\">Asset management System</div>\n                <div class=\"block\" >Application Management System</div>\n                <div class=\"block\" style=\"margin: 0% 2%;\">Business Process Automation System</div>\n                <div class=\"block\" >Clous Monitoring System</div>\n            </mat-tab>\n          </mat-tab-group>\n    </div>\n\n   \n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n apiUrl :\"http://localhost:4200\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from './../services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const user = this.authenticationService.userValue;\n        if (user) {\n            // check if route is restricted by role\n            if (route.data.roles && route.data.roles.indexOf(user.role) === -1) {\n                // role not authorised so redirect to home page\n                this.router.navigate(['/']);\n                return false;\n            }\n\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}","export * from './login.component';","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from './../services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if ([401, 403].indexOf(err.status) !== -1) {\n                // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n                this.authenticationService.logout();\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\nimport { AuthenticationService } from '../services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    \n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add auth header with jwt if user is logged in and request is to api url\n        const user = this.authenticationService.userValue;\n        const isLoggedIn = user && user.token;\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\n        if (isLoggedIn && isApiUrl) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${user.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './services';\nimport { User, Role } from './models';\n\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\nexport class AppComponent {\n    user: User;\n\n    constructor(private authenticationService: AuthenticationService) {\n        this.authenticationService.user.subscribe(x => this.user = x);\n    }\n\n    get isAdmin() {\n        return this.user && this.user.role === Role.Admin;\n    }\n\n    logout() {\n        this.authenticationService.logout();\n    }\n}","<!-- nav -->\n<!-- <div class=\"bg-color\">\n      <div class=\"nav-item\" style=\"float: left;\"><img src=\"assets/logo_smp.jpg\" alt=\"\" width=\"100%\"> </div>\n      <h2 >SMART METER OPERATIONS CENTER</h2>\n      <div class=\"nav-item\" style=\"float: right;margin-top: 25px;\"><img src=\"assets/logo_sec.png\" alt=\"\" width=\"100%\"></div>\n</div> -->\n\n<!-- main app container -->\n<div >\n  <router-outlet></router-outlet>\n</div>\n","export * from './role';\nexport * from './user';","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n// used to create fake backend\nimport { fakeBackendProvider } from './helper';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { JwtInterceptor, ErrorInterceptor } from './helper';\nimport { HomeComponent } from './home';\nimport { LoginComponent } from './login';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ContactDialogComponent } from './contact-dialog/contact-dialog.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { MatTabsModule } from '@angular/material/tabs';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        MatDialogModule,\n        MatTabsModule\n    ],\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        LoginComponent,\n        ContactDialogComponent,\n    ],\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n        // provider used to create fake backend\n        fakeBackendProvider\n    ],\n    bootstrap: [AppComponent],\n    entryComponents: [ContactDialogComponent]\n})\n\nexport class AppModule { }","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\nimport { User } from '../models';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private userSubject: BehaviorSubject<User>;\n    public user: Observable<User>;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient\n    ) {\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\n        this.user = this.userSubject.asObservable();\n    }\n\n    public get userValue(): User {\n        return this.userSubject.value;\n    }\n\n    login(username: string, password: string) {\n        return this.http.post<any>(`${environment.apiUrl}/users/authenticate`, { username, password })\n            .pipe(map(user => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('user', JSON.stringify(user));\n                this.userSubject.next(user);\n                return user;\n            }));\n    }\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('user');\n        this.userSubject.next(null);\n        this.router.navigate(['/login']);\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\nimport { User, Role } from '../models';\n\nconst users: User[] = [\n    { \n        id: 1, \n        username: 'admin',\n        password: 'admin',\n        firstName: 'Admin', \n        lastName: 'User', \n        role: Role.Admin },\n    { id: 2, username: 'zeeshan', password: 'zeeshan', firstName: 'Zeeshan', lastName: 'ahmad', role: Role.User }\n];\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const { url, method, headers, body } = request;\n\n        // wrap in delayed observable to simulate server api call\n        return of(null)\n            .pipe(mergeMap(handleRoute))\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n            .pipe(delay(500))\n            .pipe(dematerialize());\n\n        function handleRoute() {\n            switch (true) {\n                case url.endsWith('/users/authenticate') && method === 'POST':\n                    return authenticate();\n                case url.endsWith('/users') && method === 'GET':\n                    return getUsers();\n                case url.match(/\\/users\\/\\d+$/) && method === 'GET':\n                    return getUserById();\n                default:\n                    // pass through any requests not handled above\n                    return next.handle(request);\n            }\n\n        }\n\n        // route functions\n\n        function authenticate() {\n            const { username, password } = body;\n            const user = users.find(x => x.username === username && x.password === password);\n            if (!user) return error('Username or password is incorrect');\n            return ok({\n                id: user.id,\n                username: user.username,\n                firstName: user.firstName,\n                lastName: user.lastName,\n                role: user.role,\n                token: `fake-jwt-token.${user.id}`\n            });\n        }\n\n        function getUsers() {\n            if (!isAdmin()) return unauthorized();\n            return ok(users);\n        }\n\n        function getUserById() {\n            if (!isLoggedIn()) return unauthorized();\n\n            // only admins can access other user records\n            if (!isAdmin() && currentUser().id !== idFromUrl()) return unauthorized();\n\n            const user = users.find(x => x.id === idFromUrl());\n            return ok(user);\n        }\n\n        // helper functions\n\n        function ok(body) {\n            return of(new HttpResponse({ status: 200, body }));\n        }\n\n        function unauthorized() {\n            return throwError({ status: 401, error: { message: 'unauthorized' } });\n        }\n\n        function error(message) {\n            return throwError({ status: 400, error: { message } });\n        }\n\n        function isLoggedIn() {\n            const authHeader = headers.get('Authorization') || '';\n            return authHeader.startsWith('Bearer fake-jwt-token');\n        }\n\n        function isAdmin() {\n            return isLoggedIn() && currentUser().role === Role.Admin;\n        }\n\n        function currentUser() {\n            if (!isLoggedIn()) return;\n            const id = parseInt(headers.get('Authorization').split('.')[1]);\n            return users.find(x => x.id === id);\n        }\n\n        function idFromUrl() {\n            const urlParts = url.split('/');\n            return parseInt(urlParts[urlParts.length - 1]);\n        }\n    }\n}\n\nexport const fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};","export * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './fake-backend';\nexport * from './jwt.interceptor';","export * from './authentication.service';\nexport * from './user.service';","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from '../../environments/environment';\nimport { User } from '../models';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n    constructor(private http: HttpClient) { }\n\n    getAll() {\n        return this.http.get<User[]>(`${environment.apiUrl}/users`);\n    }\n\n    getById(id: number) {\n        return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home';\nimport { LoginComponent } from './login';\nimport { AuthGuard } from './helper';\nimport { Role } from './models';\n\nconst routes: Routes = [\n    {\n        path: 'home',\n        component: HomeComponent,\n        canActivate: [AuthGuard]\n    },\n\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n\n    // otherwise redirect to home\n    { path: '**', redirectTo: 'login' , pathMatch: 'full' }\n    \n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\n\nimport { AuthenticationService } from '../services';\nimport { ContactDialogComponent} from '../contact-dialog/contact-dialog.component';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService,\n       public matDialog: MatDialog\n    ) { \n        // redirect to home if already logged in\n        if (this.authenticationService.userValue) { \n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        console.log('submit');\n        console.log(this.f.username.value, this.f.password.value)\n\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    console.log(data);\n                    this.router.navigate([this.returnUrl]);\n                    //window.open('http://localhost:4200/home','_blank');\n                },\n                error => {\n                    this.error = error;\n                    this.loading = false;\n                });\n    }\n\n    openDialog() {\n\n        this.matDialog.open(ContactDialogComponent, {\n            width: '900px', height: 'auto' ,disableClose: true\n         });\n    }\n\n   \n    \n    \n}\n","<div class=\"col-lg-8 col-md-8 left-side\" >\n    <div style=\"text-align: center; color: #fff;\">\n        <div class=\"SEC-logo\">\n          <img src=\"assets/SMClogo white.png\" alt=\"\" width=\"20%\"> \n          <span></span>\n          <img src=\"assets/SEC_Logo_White.png\" alt=\"\" width=\"20%\">\n        </div>\n      <h3 style=\"margin-bottom: 0px;\">Welcome to</h3>\n      <h2 >Smart Meter Monitoring System</h2>\n   </div>\n</div>\n<div class=\"col-md-4 col-lg-4 right-side\">\n   \n    <div class=\"center-block\">\n        <h4 class=\"card-header\">Login</h4>\n        <div class=\"card-body\">\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group username-div\">\n                    <!-- <label for=\"username\">Username</label> -->\n                    <input type=\"text\" formControlName=\"username\" placeholder=\"User name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                    </div>\n                </div>\n                <div class=\"form-group \">\n                    <!-- <label for=\"password\" >Password</label> -->\n                    <input type=\"password\" formControlName=\"password\" placeholder=\"Password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    </div>\n                </div>\n                <div>\n                    <div class=\"remember-me\">\n                        <input type=\"checkbox\" name=\"remember\" id=\"\">\n                        Remember me\n                    </div> \n                    <div class=\"forgot-pass\" (click)=\"$event.preventDefault(); openDialog()\">\n                        Forgot Password?\n                    </div>\n                </div>\n                \n                <div class=\"login-btn\">\n                    <button type=\"submit\" [disabled]=\"loginForm.invalid\" class=\"btn btn-primary\">\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                        Login\n                    </button>\n                </div>\n                <div class=\"register\" (click)=\"$event.preventDefault(); openDialog()\">\n                    <!-- <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span> -->\n                    New user? Contact Admin\n                </div>\n                <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n            </form>\n        </div>\n    </div>\n    \n    \n</div>            \n\n","export * from './home.component';","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-contact-dialog',\n  templateUrl: './contact-dialog.component.html',\n  styleUrls: ['./contact-dialog.component.css']\n})\nexport class ContactDialogComponent implements OnInit {\n\n  constructor( public dialogRef: MatDialogRef<ContactDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any  ) {\n  }\n\n  ngOnInit(): void {\n   \n\n  }\n\n  close() {\n    this.dialogRef.close();  \n  }\n\n\n\n}\n","\n    <h2 mat-dialog-title>\n        <h1>to create a new user please contact</h1>\n    </h2>\n    \n    \n    <mat-dialog-content class=\"mat-dialog-content\" style=\"text-align: center;\">\n        <div class=\"call\">\n            <h4>Call</h4>\n            <div class=\"phone-img\"></div><br>\n            <p style=\"margin-bottom:3px;\">+91 80-4177-7888</p>\n            <p>+91 20-4011-7700</p>\n\n        </div>\n        <span></span>\n        <div class=\"email\">\n            <h4>Email</h4>\n            <div class=\"mail-img\"></div>\n            <p>support@se.com.sa</p>\n\n        </div>\n        <div class=\"close-btn-dialog\">\n            <button class=\"mat-raised-button mat-primary\" (click)=\"close()\"> Close</button>\n        </div>\n    \n    </mat-dialog-content>\n    \n\n    \n    \n ","export enum Role {\n    User = 'User',\n    Admin = 'Admin'\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}